{"version":3,"file":"static/js/752.bc9131f2.chunk.js","mappings":"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","sources":["style/AddCaptionPage.js","components/AddCaptionPage/AddCaptionPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const CaptionPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  background-color: #f8f9fa;\n  font-family: Arial, sans-serif;\n  min-height: 100vh; \n`;\n\nexport const ErrorMessage = styled.div`\n  color: red;\n  margin-bottom: 10px;\n  font-weight: bold;\n  text-align: center; \n`;\n\nexport const DownloadButtonContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  column-gap: 10px;\n`;\n\nexport const Button = styled.button`\n  padding: 10px 20px;\n  background-color: #007bff;\n  border: none;\n  border-radius: 5px;\n  color: white;\n  font-size: 16px;\n  cursor: pointer;\n  margin-bottom: 14px;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 4px rgba(0, 123, 255, 0.5);\n  }\n`;\n\nexport const CaptionInput = styled.input`\n  padding: 10px;\n  border: 2px solid #007bff;\n  border-radius: 4px;\n  width: 300px;\n  font-size: 16px;\n  margin-bottom: 10px;\n  text-align: center; /* Center text inside the input */\n`;\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n  max-width: 1200px;\n  width: 100%;\n  padding: 20px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const ControlsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  width: 300px; /* Set consistent width for controls */\n  margin-bottom: 20px;\n`;\n\nexport const ImageContainer = styled.div`\n  margin-right: 20px;\n  border: 1px solid #ccc;\n  padding: 10px;\n  max-width: 800px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    margin-right: 0;\n    margin-bottom: 20px;\n  }\n`;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fabric } from 'fabric';\nimport axios from 'axios';\nimport { Button, CaptionInput, CaptionPageContainer, ControlsContainer, DownloadButtonContainer, ErrorMessage, ImageContainer, MainContainer } from '../../style/AddCaptionPage';\n\nfunction AddCaptionPage() {\n  const { imageId } = useParams();\n  const [caption, setCaption] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const canvasRef = useRef(null);\n  const [canvas, setCanvas] = useState(null);\n  const UNSPLASH_ACCESS_KEY = '7To0Rjwsuimo3buWJmlk8l5ju-e3x3K1EuM4TdeZnQk';\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchImage = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.unsplash.com/photos/${imageId}?client_id=${UNSPLASH_ACCESS_KEY}`\n        );\n        setImageUrl(response.data.urls.regular);\n        console.log('Image URL fetched:', response.data.urls.regular);\n      } catch (err) {\n        setError('Error fetching image. Please try again.');\n        console.error('Error fetching image:', err);\n      }\n    };\n\n    if (imageId) {\n      fetchImage();\n    }\n  }, [imageId]);\n\n  useEffect(() => {\n    const fabricCanvas = new fabric.Canvas(canvasRef.current, {\n      width: 600,\n      height: 400,\n      backgroundColor: '#fff',\n    });\n    setCanvas(fabricCanvas);\n    console.log('Canvas initialized');\n\n    return () => {\n      fabricCanvas.dispose();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (canvas && imageUrl) {\n      console.log('Loading image onto canvas:', imageUrl);\n      fabric.Image.fromURL(\n        imageUrl,\n        (img) => {\n          img.scaleToWidth(canvas.width);\n          img.scaleToHeight(canvas.height);\n          canvas.add(img);\n          canvas.sendToBack(img); // Image as background layer\n          canvas.renderAll();\n        },\n        { crossOrigin: 'anonymous' }\n      );\n    }\n  }, [canvas, imageUrl]);\n\n  const addTextLayer = () => {\n    if (!caption.trim()) {\n      setError('Please enter a valid caption.');\n      return;\n    }\n\n    const text = new fabric.Textbox(caption, {\n      left: 100,\n      top: 100,\n      fontSize: 20,\n      fill: 'black',\n      editable: true,\n    });\n    text.set({ selectable: true, resizable: true });\n    canvas.add(text);\n    canvas.setActiveObject(text);\n    canvas.bringToFront(text);\n    canvas.renderAll();\n  };\n\n  const addShape = (shapeType) => {\n    let shape;\n\n    switch (shapeType) {\n      case 'triangle':\n        shape = new fabric.Triangle({ width: 100, height: 100, fill: 'blue', left: 100, top: 100 });\n        break;\n      case 'circle':\n        shape = new fabric.Circle({ radius: 50, fill: 'red', left: 100, top: 100 });\n        break;\n      case 'rectangle':\n        shape = new fabric.Rect({ width: 120, height: 80, fill: 'green', left: 100, top: 100 });\n        break;\n      case 'polygon':\n        shape = new fabric.Polygon([{ x: 200, y: 0 }, { x: 250, y: 50 }, { x: 300, y: 0 }, { x: 275, y: 100 }], {\n          fill: 'orange',\n          left: 100,\n          top: 100,\n        });\n        break;\n      default:\n        return;\n    }\n\n    shape.set({ selectable: true, resizable: true });\n    canvas.add(shape);\n    canvas.bringToFront(shape);\n    canvas.renderAll();\n  };\n\n  // Download canvas as an image\n  const downloadCanvas = () => {\n    try {\n      const dataUrl = canvas.toDataURL({\n        format: 'png',\n        quality: 0.8,\n      });\n      const link = document.createElement('a');\n      link.href = dataUrl;\n      link.download = 'canvas-image.png';\n      link.click();\n    } catch (err) {\n      setError('Failed to download the image. Please try again.');\n      console.error('Error downloading image:', err);\n    }\n  };\n\n  // Log all canvas layers and their attributes\n  const logCanvasLayers = () => {\n    const canvasObjects = canvas.getObjects();\n    const layersInfo = canvasObjects.map((obj) => {\n      return {\n        type: obj.type,\n        left: obj.left,\n        top: obj.top,\n        width: obj.width || obj.getScaledWidth(),\n        height: obj.height || obj.getScaledHeight(),\n        text: obj.text || '',\n        fill: obj.fill || '',\n      };\n    });\n    console.log('Canvas Layers:', layersInfo);\n  };\n\n  return (\n    <CaptionPageContainer>\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n\n      <MainContainer>\n        <ImageContainer>\n          <canvas ref={canvasRef} id=\"canvas\" />\n        </ImageContainer>\n\n        <ControlsContainer>\n          <CaptionInput\n            type=\"text\"\n            placeholder=\"Add Caption\"\n            value={caption}\n            onChange={(e) => setCaption(e.target.value)}\n          />\n          <Button onClick={addTextLayer}>Add Caption Text</Button>\n          <Button onClick={() => addShape('triangle')}>Add Triangle</Button>\n          <Button onClick={() => addShape('circle')}>Add Circle</Button>\n          <Button onClick={() => addShape('rectangle')}>Add Rectangle</Button>\n          <Button onClick={() => addShape('polygon')}>Add Polygon</Button>\n        </ControlsContainer>\n      </MainContainer>\n\n      <DownloadButtonContainer>\n        <Button onClick={downloadCanvas}>Download</Button>\n        <Button onClick={logCanvasLayers}>Log Canvas Layers</Button>\n      </DownloadButtonContainer>\n    </CaptionPageContainer>\n  );\n}\n\nexport default AddCaptionPage;\n\n\n"],"names":["CaptionPageContainer","styled","div","ErrorMessage","DownloadButtonContainer","Button","button","CaptionInput","input","MainContainer","ControlsContainer","ImageContainer","imageId","useParams","caption","setCaption","useState","imageUrl","setImageUrl","canvasRef","useRef","canvas","setCanvas","error","setError","useEffect","async","response","axios","get","data","urls","regular","console","log","err","fetchImage","fabricCanvas","fabric","Canvas","current","width","height","backgroundColor","dispose","Image","fromURL","img","scaleToWidth","scaleToHeight","add","sendToBack","renderAll","crossOrigin","addShape","shapeType","shape","Triangle","fill","left","top","Circle","radius","Rect","Polygon","x","y","set","selectable","resizable","bringToFront","_jsxs","children","_jsx","ref","id","type","placeholder","value","onChange","e","target","onClick","addTextLayer","trim","text","Textbox","fontSize","editable","setActiveObject","downloadCanvas","dataUrl","toDataURL","format","quality","link","document","createElement","href","download","click","logCanvasLayers","layersInfo","getObjects","map","obj","getScaledWidth","getScaledHeight"],"sourceRoot":""}